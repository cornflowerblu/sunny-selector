name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build the stack and Run Tests
        run: |
          npm install -g @microsoft/rush
          cd app/sunny-nextjs
          mv local.env .env
          cd ../../
          rush update
          npm run compose:up
          npm install
          npm run test:ci

      - name: Delete Video
        run: rm -rf ./cypress/videos

  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Verify Change Logs
        run: node common/scripts/install-run-rush.js change --verify
      - name: Rush Install
        run: node common/scripts/install-run-rush.js install
      - name: Rush Rebuild
        run: node common/scripts/install-run-rush.js rebuild --verbose -t episode-service -t hasura-auth-webhook

      # # Install doctl
      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # # Log in to Digital Ocean
      # - name: Log in to DigitalOcean Container Registry with short-lived credentials
      #   run: doctl registry login --expiry-seconds 1200

      # # Build a Docker image of your application in your registry and tag the image with the $GITHUB_SHA.
      # - name: Build containers
      #   run: |
      #     cd common/deploy/
      #     docker build -f app/hasura-auth-webhook/Dockerfile -t ${{ secrets.REGISTRY_NAME }}/auth-webhook ./app/hasura-auth-webhook

      # - name: Tag containers with $GITHUB_SHA.
      #   run: docker tag ${{ secrets.REGISTRY_NAME }}/auth-webhook ${{ secrets.REGISTRY_NAME }}/auth-webhook:$(echo $GITHUB_SHA | head -c7)

      # - name: Push images to DigitalOcean Container Registry
      #   run: docker push --all-tags ${{ secrets.REGISTRY_NAME }}/auth-webhook
